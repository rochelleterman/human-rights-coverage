text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-10000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
View(top.tri.slo)
plot(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2,pch='',xlim=c(-10,10))
text(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2,pch='',xlim=c(-10,10))
plot(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2,pch='',xlim=c(-10,10),ylim=(0,100))
text(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2, labels = row.names(top.tri.smd), pos = 1)
View(top.tri.slo)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=(0,100))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(0,100))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(-10,60)
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(-10,80))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-100000,200000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-100000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-10000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c((-40)**2,400**2))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-2000,400**2))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-20000,400**2))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-20000,160000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-20000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-10,500), ylim=c(-20000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-10,500), ylim=c(-70000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-100,500), ylim=c(-70000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
View(uni)
which(similar.statements$euclid.weight.value==min(similar.statements$euclid.weight.value))
similar.statements$euclid.weight[which(similar.statements$euclid.weight.value==min(similar.statements$euclid.weight.value))] # same as euclidian distance matrix: 03Oct2006Sessions97 and 21Dec2005Shelby387
similar.statements$cosine.value <- as.numeric(as.character(similar.statements$cosine.value))
which(similar.statements$cosine.value==max(similar.statements$cosine.value))
similar.statements$cosine[which(similar.statements$cosine.value==max(similar.statements$cosine.value))] #  28Jul2005Shelby238 and
rm(list=ls())
amnesty <- read.csv("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Data/Amnesty/total_amnesty2.csv")
keywords <- amnesty$keywords
unlist(keywords)
amnesty$keywords[1]
strsplit(x,",")
x <- amnesty$keywords[1]
strsplit(x,",")
?strsplit
strsplit(x,\,)
strsplit(x,"," )
x <- typeof(amnesty$keywords[1])
typeof(amnesty$keywords[1])
as.characer(amnesty$keywords[1])
as.character(amnesty$keywords[1])
strsplit(x,"," )
x <- as.character(amnesty$keywords[1])
strsplit(x,"," )
typeof(x)
strsplit(x,"\s,\s" )
strsplit(x,"\S,\S" )
strsplit(x,"\\s,\\s" )
x <- as.character(amnesty$keywords[1])
strsplit(x,"\\s,\\s" )
typeof(x)
strsplit(x,"\\s\,\\s" )
strsplit(x,"\\s\\,\\s" )
typeof(x)
x <- as.character(amnesty$keywords[1])
strsplit(x,"\\s\\,\\s" )
strsplit(x,"," )
strsplit(x,"\\s?,\\s?" )
typeof(x)
split.keywords <- function(row){
x <- as.character(amnesty$keywords[row])
x <- strsplit(x,"\\s?,\\s?" )
return(x)
}
split.keywords(44)
split.keywords <- function(row){
x <- as.character(amnesty$keywords[row])
x <- strsplit(x,"\\s?,\\s?" )
return(x)[[1]]
}
split.keywords(44)
split.keywords <- function(row){
x <- as.character(amnesty$keywords[row])
x <- strsplit(x,"\\s?,\\s?" )
return(x)[1]
}
split.keywords(44)
split.keywords <- function(row){
x <- as.character(amnesty$keywords[row])
x <- strsplit(x,"\\s?,\\s?" )
return(x)
}
split.keywords(44)
seq <- 1:nrow(amnesty)
amnest$keywords.split <- lapply(seq,split.keywords)
amnesty$keywords.split <- lapply(seq,split.keywords)
View(amnesty)
x <- amnesty$keywords.split
x
x <- unlist(x)
x
summary(x)
x <- as.factor(x)
summary(x)
View(amnesty)
countries <- read.csv("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/country_codes.csv")
names(amnesty)
countries <- read.csv("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/country_codes.csv")
names(amnesty)
amnesty$region <- NA
for (i in 1:nrow(countries)){
country <- countries$iso3c[i]
amnesty$region[amnesty$countrycode==country]<-as.character(countries$Region[i])
}
View(amnesty)
View(countries)
countries$Key <- as.character(countries$Key)
countries$iso3c <- as.character(countries$iso3c)
amnesty$region <- NA
names(amnesty)
for (i in 1:nrow(countries)){
country <- countries$iso3c[i]
amnesty$region[amnesty$countrycode==country]<-as.character(countries$Region[i])
}
View(countries)
for (i in 1:nrow(countries)){
country <- countries$code[i]
amnesty$region[amnesty$countrycode==country]<-as.character(countries$Region[i])
}
View(countries)
amnesty$region <- NA
for (i in 1:nrow(countries)){
country <- countries$Code[i]
amnesty$region[amnesty$countrycode==country]<-as.character(countries$Region[i])
}
View(amnesty)
summary(amnesty$keywords.split)
mena <- amnesty$keywords.split[amnesty$region=="MENA"]
mena <- as.factor(unlist(mena))
summary(amnesty$keywords.split)
mena <- amnesty$keywords.split[amnesty$region=="MENA"]
mena <- as.factor(unlist(mena))
summary(mena)
mena <- summary(mena)[1:20]
mena
mena <- amnesty$keywords.split[amnesty$region=="MENA"]
mena <- as.factor(unlist(mena))
mena <- cbind(summary(mena)[1:20]
mena
mena <- amnesty$keywords.split[amnesty$region=="MENA"]
mena <- as.factor(unlist(mena))
mena <- cbind(summary(mena)[1:20])
mena
la <- amnesty$keywords.split[amnesty$region=="LA"]
la <- as.factor(unlist(la))
la <- cbind(summary(la)[1:20])
la
eeca <- amnesty$keywords.split[amnesty$region=="EECA"]
eeca <- as.factor(unlist(eeca))
eeca <- cbind(summary(eeca)[1:20])
eeca
africa <- amnesty$keywords.split[amnesty$region=="Africa"]
africa <- as.factor(unlist(africa))
africa <- cbind(summary(africa)[1:20])
africa
asia <- amnesty$keywords.split[amnesty$region=="Asia"]
asia <- as.factor(unlist(asia))
asia <- cbind(summary(asia)[1:20])
asia
west <- amnesty$keywords.split[amnesty$region=="West"]
west <- as.factor(unlist(west))
west <- cbind(summary(west)[1:20])
west
View(amnesty)
summary(amnesty$region)
summary(as.factor(amnesty$region)))
summary(as.factor(amnesty$region))
amnesty$region[amnesty$countrycode==2]
x <- amnesty[amnesty$region=="West",]
View(x)
all.keywords <- cbind(west[,1],asia[,1])
View(all.keywords)
all.keywords <- cbind(rownames(west),rownames(asia))
View(all.keywords)
all.keywords <- cbind(rownames(africa),rownames(asia),rownames(eeca),rownames(la),rownames(mena),rownames(west))
View(all.keywords)
names(all.keywords) <- c("Africa","Asia","Former Soviet Union","Latin America","MENA","West")
View(all.keywords)
colnames(all.keywords) <- c("Africa","Asia","Former Soviet Union","Latin America","MENA","West")
View(africa)
View(all.keywords)
xtable(colnames)
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
xtable(colnames)
xtable(all.keywords)
print(x)
table <- xtable(all.keywords)
print(table)
table <- xtable(all.keywords[,1:3])
print(table)
table <- xtable(all.keywords[1:10,1:3])
print(table)
table <- xtable(all.keywords[11:20,4:6])
print(table)
table <- xtable(all.keywords[1:10,4:6])
View(all.keywords)
table <- xtable(all.keywordsx[1:10,4:6])
table <- xtable(all.keywordsx[1:10,4:6])
print(table)
region.per.year <- function(x,y){
subset.data <- subset(amnest,region==x & year==y)
return(as.integer(nrow(subset.data)))
}
region.per.year <- function(x,y){
subset.data <- subset(amnest,region==x & year==y)
return(as.integer(nrow(subset.data)))
}
# create dataframe
regions <- unique(amnesty$region[!is.na(amnesty$region)])
number.news <- data.frame(regions)
start <- min(amnesty$year, na.rm=TRUE)
end <- amnesty$year,, na.rm=TRUE)
start <- min(amnesty$year, na.rm=TRUE)
end <- max(amnesty$year, na.rm=TRUE)
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
# define function
region.per.year <- function(x,y){
subset.data <- subset(amnesty,region==x & year==y)
return(as.integer(nrow(subset.data)))
}
# create dataframe
regions <- unique(amnesty$region[!is.na(amnesty$region)])
number.news <- data.frame(regions)
# fill in cells
start <- min(amnesty$year, na.rm=TRUE)
end <- max(amnesty$year, na.rm=TRUE)
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
names(number.news) <- c("regions",start:end)
write.csv(number.news,"region_year_counts_amnesty.csv")
View(number.news)
rownames(number.news) <- number.news$regions
number.news$regions
number.news <- number.news[, !(colnames(number.news) %in% c("regions"))]
x <- seq(1980,2010)
m <- number.news[3,]
l <- number.news[1,]
c <- number.news[5,]
a <- number.news[4,]
w <- number.news[2,]
f <- number.news[6,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
lines(x, c, type="l",col="yellow" )
x <- seq(1985,2012)
m <- number.news[3,]
l <- number.news[1,]
c <- number.news[5,]
a <- number.news[4,]
w <- number.news[2,]
f <- number.news[6,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
View(number.news)
names(number.news)
colnames(number.news)
rownames(number.news)
x <- seq(1985,2012)
m <- number.news[2,]
l <- number.news[3,]
c <- number.news[6,]
a <- number.news[5,]
w <- number.news[4,]
f <- number.news[1,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
start <- min(amnesty$year, na.rm=TRUE)
end <- 2007
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
names(number.news) <- c("regions",start:end)
write.csv(number.news,"region_year_counts_amnesty.csv")
rownames(number.news) <- number.news$regions
number.news$regions
number.news <- number.news[, !(colnames(number.news) %in% c("regions"))]
rownames(number.news)
x <- seq(1985,2007)
m <- number.news[2,]
l <- number.news[3,]
c <- number.news[6,]
a <- number.news[5,]
w <- number.news[4,]
f <- number.news[1,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
start <- 1985
end <- 2007
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
View(number.news)
regions <- unique(amnesty$region[!is.na(amnesty$region)])
number.news <- data.frame(regions)
start <- 1985
end <- 2007
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
names(number.news) <- c("regions",start:end)
write.csv(number.news,"region_year_counts_amnesty.csv")
#########################################
##### Plot Region changes over time #####
#########################################
rownames(number.news) <- number.news$regions
number.news$regions
number.news <- number.news[, !(colnames(number.news) %in% c("regions"))]
rownames(number.news)
x <- seq(1985,2007)
m <- number.news[2,]
l <- number.news[3,]
c <- number.news[6,]
a <- number.news[5,]
w <- number.news[4,]
f <- number.news[1,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
rownames(number.news)
lines(x, l, type="l",col="green" )
lines(x, c, type="l",col="yellow" )
lines(x, a, type="l",col="blue" )
lines(x, w, type="l",col="orange" )
lines(x, f, type="l",col="purple" )
amnesty$keywords.split[1]
amnesty$keywords.split[4]
amnesty$keywords.split[10]
?grep
rep("women",amnesty$keywords,ignore.case=TRUE)
grep("women",amnesty$keywords,ignore.case=TRUE)
region.per.year.women <- function(x,y){
subset.data <- subset(amnesty,region==x & year==y & grep("women",amnesty$keywords,ignore.case=TRUE))
return(as.integer(nrow(subset.data)))
}
regions <- unique(amnesty$region[!is.na(amnesty$region)])
number.news <- data.frame(regions)
# fill in cells
start <- 1985
end <- 2007
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
names(number.news) <- c("regions",start:end)
View(number.news)
rownames(number.news) <- number.news$regions
number.news$regions
number.news <- number.news[, !(colnames(number.news) %in% c("regions"))]
rownames(number.news)
x <- seq(1985,2007)
m <- number.news[2,]
l <- number.news[3,]
c <- number.news[6,]
a <- number.news[5,]
w <- number.news[4,]
f <- number.news[1,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
lines(x, c, type="l",col="yellow" )
lines(x, a, type="l",col="blue" )
lines(x, w, type="l",col="orange" )
lines(x, f, type="l",col="purple" )
plot(x,m,
xlab="year",
ylab="number of AI urgent actions", # Change this for your data
main="Amnesty Coverage on Women in Latin America + MENA regions",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
plot(x,m,
xlab="year",
ylab="number of AI urgent actions", # Change this for your data
main="Amnesty UA's on Women in Latin America + MENA regions",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
legend("topleft", c("Middle East", "Latin America"), col = c("red", "green"),
text.col = "black", lty = 1,
merge = TRUE, bg = "gray90")
plot(x,m,
xlab="year",
ylab="number of AI urgent actions", # Change this for your data
main="Amnesty UA's on Women in Latin America + MENA regions",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
legend("topleft", c("Middle East", "Latin America"), col = c("red", "green"),
text.col = "black", lty = 1,
merge = TRUE, bg = "gray90")
total <- read.csv("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Data/New\ York\ Times/NYT.csv")
total <- read.csv("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Data/New\ York\ Times/NYT.csv")
total.all <- total # retain all data
total.without.us <- subset(total,!grepl("united states",total$COUNTRY_FINAL,ignore.case=TRUE)) # without USA
total.violations <- subset(total,grepl("HUMAN RIGHTS VIOLATIONS",total$SUBJECT)) # only human rights violations
total.violations.no.us <- subset(total.without.us,grepl("HUMAN RIGHTS VIOLATIONS",total.without.us$SUBJECT)) # without USA, and only human rights violations
total <- total.violations.no.us #take out US for this one due to validity problems.
region.per.year <- function(x,y){
subset.data <- subset(total,REGION==x & YEAR==y)
return(as.integer(nrow(subset.data)))
}
# create dataframe
regions <- unique(total$REGION[!is.na(total$REGION)])
number.news <- data.frame(regions)
# fill in cells
start <- min(total$YEAR, na.rm=TRUE)
end <- max(total$YEAR, na.rm=TRUE)
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
names(number.news) <- c("regions",start:end)
rownames(number.news) <- number.news$regions
number.news$regions
number.news <- number.news[, !(colnames(number.news) %in% c("regions"))]
x <- seq(1980,2010)
m <- number.news[3,]
l <- number.news[1,]
c <- number.news[5,]
a <- number.news[4,]
w <- number.news[2,]
f <- number.news[6,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
lines(x, c, type="l",col="yellow" )
lines(x, a, type="l",col="blue" )
lines(x, w, type="l",col="orange" )
lines(x, f, type="l",col="purple" )
legend("topleft", c("Middle East", "Latin America", "Former Soviet Union","Asia","West","Africa"), col = c("red", "green","yellow","blue","orange","purple"),
text.col = "black", lty = 1,
merge = TRUE, bg = "gray90")
setwd("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Results")
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
lines(x, c, type="l",col="yellow" )
lines(x, a, type="l",col="blue" )
lines(x, w, type="l",col="orange" )
lines(x, f, type="l",col="purple" )
legend("topleft", c("Middle East", "Latin America", "Former Soviet Union","Asia","West","Africa"), col = c("red", "green","yellow","blue","orange","purple"),
text.col = "black", lty = 1,
merge = TRUE, bg = "gray90")
setwd("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Results")
