similar.statements$euclid.weight[which(similar.statements$euclid.weight.value==min(similar.statements$euclid.weight.value))] # same as euclidian distance matrix: 30Sep2006Sessions100 and 21Dec2005Shelby387
similar.statements$cosine.value <- as.numeric(as.character(similar.statements$cosine.value))
which(similar.statements$cosine.value==max(similar.statements$cosine.value))
similar.statements$cosine[which(similar.statements$cosine.value==max(similar.statements$cosine.value))] #  29Sep2006Shelby321 and 20Sep2007Sessions16
similar.statements$cosine.weights.value <- as.numeric(as.character(similar.statements$cosine.weights.value))
which(similar.statements$cosine.weights.value==max(similar.statements$cosine.weights.value))
similar.statements$cosine.weights[which(similar.statements$cosine.weights.value==max(similar.statements$cosine.weights.value))] # Choosing 18Jul2006Shelby207 and 31Aug2006Sessions109
# gaussian kernel! joy!
similar.statements$gauss.value <- as.numeric(as.character(similar.statements$gauss.value))
which(similar.statements$gauss.value==max(similar.statements$gauss.value))
similar.statements$gauss[which(similar.statements$gauss.value==max(similar.statements$gauss.value))] # picking 28Jun2007Shelby133 and 15May2006Sessions139 (same as cosine distance)
similar.statements$gauss.weights.value <- as.numeric(as.character(similar.statements$gauss.weights.value))
which(similar.statements$gauss.weights.value==max(similar.statements$gauss.weights.value))
similar.statements$gauss.weights[which(similar.statements$gauss.weights.value==max(similar.statements$gauss.weights.value))] # Picking 21Dec2005Shelby387 and 30Sep2006Sessions100 (same as Euclid distance)
similar.statements$gauss.weights[which(similar.statements$gauss.weights.value==max(similar.statements$gauss.weights.value))] # Picking 21Dec2005Shelby387 and 30Sep2006Sessions100 (same as Euclid distance)
write.csv(both.100)
write.csv(both.100,file="both.100.csv")
both.100 <- read.csv("/Users/rterman/both.100.csv")
View(both.100)
rownames(both.100) <- both.100$X
View(both.100)
both.100$X <- NULL
euclid <- dist(both.100, method = "euclidean")
euclid <- as.matrix(euclid)
tfidf=function(dtm){
tf <- dtm
id=function(col){
sum(!col==0)
}
idf <- log(nrow(dtm)/apply(dtm, 2, id))
tfidf <- dtm
for(word in names(idf)){tfidf[,word] <- tf[,word] * idf[word]}
return(tfidf)
}
weights <- tfidf(both.100)
euclid.weights <- as.matrix(dist(weights,method="euclidean"))
library(lsa)
cosine <- cosine(as.matrix(t(both.100)))
cosine.weights <- cosine(as.matrix(t(weights)))
library(KRLS)
norm <- both.100/rowSums(both.100)
gaussian <- gausskernel(norm,sigma=1)
norm.weights <- weights/rowSums(weights)
gaussian.weights <- gausskernel(weights,sigma=1)
get.similar.statement <- function(row,matrix){ # where matrix is the similarity/distance method, e.g. Euclidean
data <- matrix
if (row<101){
data <- subset(data,select=101:200)
} else {
data <- subset(data,select=1:100)
}
data <- data[row,order(data[row,],decreasing=FALSE),drop=FALSE] # sorted data
statement <- colnames(data)[1]
value <- data[1,1]
return(unlist(c(statement,value)))
}
euclid.similar.statements <- lapply(seq(1:200),get.similar.statement,matrix=euclid)
similar.statements <- data.frame(do.call(rbind,euclid.similar.statements)) # make it a dataframe
rownames(similar.statements) <- rownames(euclid) # name the rows
names(similar.statements) <- c("euclid","euclid.value")
# Apply to Euclidean distance with td-idf weights matrix
euclid.tdidf.similar <- lapply(seq(1:200),get.similar.statement,matrix=euclid.weights)
similar.statements <- cbind(similar.statements,do.call(rbind,euclid.tdidf.similar))
names(similar.statements)[3:4] <- c("euclid.weight","euclid.weight.value")
# Apply to Cosine similarity
# Have to edit my function to get maxes, not mins because cosine similarity asks for the maximum similarity (as opposed to Euclidean's minimum distance). This just changes the decreasing=FALSE boolean to TRUE
get.similar.statement.max <- function(row,matrix){
data <- matrix
if (row<101){
data <- subset(data,select=101:200)
} else {
data <- subset(data,select=1:100)
}
data <- data[row,order(data[row,],decreasing=TRUE),drop=FALSE] # sorted data
statement <- colnames(data)[1]
value <- data[1,1]
return(unlist(c(statement,value)))
}
# Apply to Cosine matrix
cosine.similar <- lapply(seq(1:200),get.similar.statement.max,matrix=cosine)
similar.statements <- cbind(similar.statements,do.call(rbind,cosine.similar))
names(similar.statements)[5:6] <- c("cosine","cosine.value")
# Apply to cosine with weights matrix
cosine.similar.weights <- lapply(seq(1:200),get.similar.statement.max,matrix=cosine.weights)
similar.statements <- cbind(similar.statements,do.call(rbind,cosine.similar.weights))
names(similar.statements)[7:8] <- c("cosine.weights","cosine.weights.value")
# Apply to gaussian matrix
gauss.similar <- lapply(seq(1:200),get.similar.statement.max,matrix=gaussian)
similar.statements <- cbind(similar.statements,do.call(rbind,gauss.similar))
names(similar.statements)[9:10] <- c("gauss","gauss.value")
gauss.weights.similar <- lapply(seq(1:200),get.similar.statement.max,matrix=gaussian.weights)
similar.statements <- cbind(similar.statements,do.call(rbind,gauss.weights.similar))
names(similar.statements)[11:12] <- c("gauss.weights","gauss.weights.value")
similar.statements$euclid.value <- as.numeric(as.character(similar.statements$euclid.value)) # prep for next step
which(similar.statements$euclid.value==min(similar.statements$euclid.value)) # find indeces of minimum value
similar.statements$euclid[which(similar.statements$euclid.value==min(similar.statements$euclid.value))] # find statment with those min values. many options to choose from here. I'm going to go with the pair 03Oct2006Sessions97 and 21Dec2005Shelby387
# euclid distance with td-idf weights
similar.statements$euclid.weight.value <- as.numeric(as.character(similar.statements$euclid.weight.value))
which(similar.statements$euclid.weight.value==min(similar.statements$euclid.weight.value))
similar.statements$euclid.weight[which(similar.statements$euclid.weight.value==min(similar.statements$euclid.weight.value))] # same as euclidian distance matrix: 03Oct2006Sessions97 and 21Dec2005Shelby387
# cosine similarity
similar.statements$cosine.value <- as.numeric(as.character(similar.statements$cosine.value))
which(similar.statements$cosine.value==max(similar.statements$cosine.value))
similar.statements$cosine[which(similar.statements$cosine.value==max(similar.statements$cosine.value))] #  28Jul2005Shelby238 and 27Sep2005Sessions181
# cosine similarity with td-idf weights
similar.statements$cosine.weights.value <- as.numeric(as.character(similar.statements$cosine.weights.value))
which(similar.statements$cosine.weights.value==max(similar.statements$cosine.weights.value))
similar.statements$cosine.weights[which(similar.statements$cosine.weights.value==max(similar.statements$cosine.weights.value))]
similar.statements$gauss.value <- as.numeric(as.character(similar.statements$gauss.value))
which(similar.statements$gauss.value==max(similar.statements$gauss.value))
similar.statements$gauss[which(similar.statements$gauss.value==max(similar.statements$gauss.value))] # picking 23Jun2005Shelby188 and 04May2006Sessions144
# Gaussian kernel with weights! yaaaay!
similar.statements$gauss.weights.value <- as.numeric(as.character(similar.statements$gauss.weights.value))
which(similar.statements$gauss.weights.value==max(similar.statements$gauss.weights.value))
similar.statements$gauss.weights[which(similar.statements$gauss.weights.value==max(similar.statements$gauss.weights.value))] # Picking 21Dec2005Shelby387 and 03Oct2006Sessions97 (same as Euclid distance)
which(similar.statements$euclid.value==min(similar.statements$euclid.value)) # find indeces of minimum value
similar.statements$euclid[which(similar.statements$euclid.value==min(similar.statements$euclid.value))] # find statment with those min values. many options to choose from here. I'm going to go with the pair 03Oct2006Sessions97 and 21Dec2005Shelby387
which(similar.statements$euclid.value==min(similar.statements$euclid.value)) # find indeces of minimum value
View(similar.statements)
which(similar.statements$cosine.weights.value==max(similar.statements$cosine.weights.value))
which(similar.statements$cosine.value==max(similar.statements$cosine.value))
which(similar.statements$gauss.value==max(similar.statements$gauss.value))
plot(top.uni.smd$smd.count,top.uni.smd$smd.count**2,xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.smd$smd.count,top.uni.smd$smd.count**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
View(top.uni.ld)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,xlim=c(-10,10),ylim=c(-300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,xlim=c(-300,1400),ylim=c(-300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,xlim=c(-300,1400)
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,xlim=c(-300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd$smd.count,top.uni.smd$smd.count**2,xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.smd$smd.count,top.uni.smd$smd.count**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd$smd.count,top.uni.smd$smd.count**2,tcr='',xlim=c(-10,10),ylim=c(-10,60))
plot(top.uni.smd$smd.count,top.uni.smd$smd.count**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.smd$smd.count,top.uni.smd$smd.count**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,xlim=c(-300,1400))
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch=''xlim=c(-300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch=''xlim=c(-1300,1400))
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch=''xlim=c(-1300,1400))
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-1300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-1300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-1300,10400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400)
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-300,2000000)
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-300,2000000))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-3000,2000000))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-30000,2000000))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-300000,2000000))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd$smd.count,top.uni.smd$smd.count**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.smd$smd.count,top.uni.smd$smd.count**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-300000,2000000))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
View(top.tri.smd.rate)
View(top.uni.smd.rate)
View(top.tri.smd)
View(top.uni.smd)
View(top.uni.smd.rate)
plot(top.uni.smd.rate$smd.rate,top.uni.smd$smd.count**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.smd$smd.count,top.uni.smd$smd.count**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd.rate$smd.rate,top.uni.smd$smd.count**2,pch='',xlim=c(-10,10))
text(top.uni.smd$smd.count,top.uni.smd$smd.count**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd.rate$smd.rate,top.uni.smd.rate$smd.rate**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.smd$smd.count,top.uni.smd$smd.count**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd.rate$smd.rate,top.uni.smd.rate$smd.rate**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.smd.rate$smd.rate,top.uni.smd.rate$smd.rate, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd.rate$smd.rate,top.uni.smd.rate$smd.rate**2,pch='',xlim=c(-10,10)
text(top.uni.smd.rate$smd.rate,top.uni.smd.rate$smd.rate, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.smd.rate$smd.rate,top.uni.smd.rate$smd.rate**2,pch='',xlim=c(-10,10))
text(top.uni.smd.rate$smd.rate,top.uni.smd.rate$smd.rate, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2, labels = row.names(top.uni.smd), pos = 1)
View(top.uni.slo)
plot(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2,pch='',xlim=c(-10,10),ylim=c(-10,10))
text(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2,pch='',xlim=c(-10,10),ylim=c(0,10))
text(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2,pch='',xlim=c(-5,5),ylim=c(0,10))
text(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2,pch='',xlim=c(-5,5),ylim=c(2,10))
text(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2,pch='',xlim=c(-4,4),ylim=c(2,10))
text(top.uni.slo$stlogoddse,top.uni.slo$stlogoddse**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-300000,2000000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-300,1400))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
View(top.tri.ld)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c((-40)**2,400**2)
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c((-40)**2,400**2))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
View(top.tri.ld)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
View(top.tri.smd)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=(-1000,1000)
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=(-1000,1000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=(-1000,1000))
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-1000,1000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-10000,10000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-20000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2,pch='',xlim=c(-300,1400),ylim=c(-300000,2000000))
text(top.uni.ld$ld.rate,top.uni.ld$ld.rate**2, labels = row.names(top.uni.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(0,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(1000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(10000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-10000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
View(top.tri.slo)
plot(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2,pch='',xlim=c(-10,10))
text(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2,pch='',xlim=c(-10,10))
plot(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2,pch='',xlim=c(-10,10),ylim=(0,100))
text(top.tri.slo$stlogoddse,top.tri.slo$stlogoddse**2, labels = row.names(top.tri.smd), pos = 1)
View(top.tri.slo)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=(0,100))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(0,100))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(-10,60)
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(-10,60))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2,pch='',xlim=c(-10,10),ylim=c(-10,80))
text(top.tri.slo$stlogodds,top.tri.slo$stlogodds**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-100000,200000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-100000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.smd$smd.count,top.tri.smd$smd.count**2,pch='',xlim=c(-100,100),ylim=c(-10000,20000))
text(top.tri.smd$smd.count,top.tri.smd$smd.count**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c((-40)**2,400**2))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-2000,400**2))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-20000,400**2))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-20000,160000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-40,400), ylim=c(-20000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-10,500), ylim=c(-20000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-10,500), ylim=c(-70000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
plot(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2,pch='',xlim=c(-100,500), ylim=c(-70000,200000))
text(top.tri.ld$ld.rate,top.tri.ld$ld.rate**2, labels = row.names(top.tri.smd), pos = 1)
View(uni)
which(similar.statements$euclid.weight.value==min(similar.statements$euclid.weight.value))
similar.statements$euclid.weight[which(similar.statements$euclid.weight.value==min(similar.statements$euclid.weight.value))] # same as euclidian distance matrix: 03Oct2006Sessions97 and 21Dec2005Shelby387
similar.statements$cosine.value <- as.numeric(as.character(similar.statements$cosine.value))
which(similar.statements$cosine.value==max(similar.statements$cosine.value))
similar.statements$cosine[which(similar.statements$cosine.value==max(similar.statements$cosine.value))] #  28Jul2005Shelby238 and
rm(list=ls())
setwd("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/country-year-database")
rt <- read.csv("rt.csv")
View(rt)
rt$X <- NULL
library("MASS")
library("xtable")
rt$X.1 <- NULL
pre.2001 <- rt[rt$year<2002,]
pre.2001 <- pre.2001[-which(rt$country=="United States"),]
post.2001 <- rt[rt$year>2002 & rt$year < 2011,]
post.2001 <- post.2001[-which(rt$country=="United States"),]
names(rt)
glm.2<-glm.nb(nyt ~ gdp.pc.wdi+pop.wdi+amnesty+statedept+milper+amnesty.uas+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.3 <- glm.nb(nyt ~ polity+democ+autoc+physint+speech+new_empinx+wecon+wopol+wosoc+elecsd+gdp.pc.wdi+pop.wdi+amnesty+statedept+milper+cinc+bdeadbest+domestic9+amnesty.uas+(relevel(region,5)), data = post.2001, na.action=na.omit)
summary(glm.3)
glm.2<-glm.nb(nyt ~ (relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ gdp.pc.wdi+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ pop.wdi+amnesty+statedept+milper+cinc+gdp.pc.wdi+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ (relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+democ+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+democ+physint+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+democ+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+democ+amnesty+statedept+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+bdeadbest+amnesty.uas+dp.pc.wdi+pop.wdi+(relevel(region,5)), data = post.2001,na.action=na.omit)
glm.2<-glm.nb(nyt ~ polity+bdeadbest+amnesty.uas+dgp.pc.wdi+pop.wdi+(relevel(region,5)), data = post.2001,na.action=na.omit)
glm.2<-glm.nb(nyt ~ polity+bdeadbest+amnesty.uas+gdp.pc.wdi+pop.wdi+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+amnesty.uas+gdp.pc.wdi+pop.wdi+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.1.table
glm.2<-glm.nb(nyt ~ polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-glm(nyt ~ polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-lm(nyt ~ polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-glm.nb(nyt ~ polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-lm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+speech+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.exclude)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.3 <- glm(nyt ~ polity+democ+autoc+physint+speech+new_empinx+wecon+wopol+wosoc+elecsd+gdp.pc.wdi+pop.wdi+amnesty+statedept+milper+cinc+bdeadbest+domestic9+amnesty.uas+(relevel(region,5)), data = post.2001, na.action=na.omit)
summary(glm.3)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
post.2001 <- rt[rt$year>2001 & rt$year < 2011,]
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
post.2001 <- rt[rt$year>2002 & rt$year < 2011,]
post.2001 <- post.2001[-which(rt$country=="United States"),]
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm.nb(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ (relevel(region,5))+nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+physint+speech, data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+milper+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+milper+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.1.table <- xtable(glm.2,caption="")
View(glm.1.table)
?xtable
glm.1<-glm.nb(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,4)), data = pre.2001, na.action=na.omit)
summary(glm.1)
glm.2<-glm.nb(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.1<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,4)), data = pre.2001, na.action=na.omit)
summary(glm.1)
glm.2.table <- xtable(glm.2,caption="")
glm.2.table <- xtable(glm.2,caption="Determinants of Media Coverage, 1980–2001")
print(glm.2.table)
names(rt)
glm.2<-glm(nyt ~ nyt.lagged+bdeadbest+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2.table <- xtable(summary(glm.2),caption="Determinants of Media Coverage, 1980–2001")
print(glm.2.table)
print(glm.2.table)
summary(glm.2)
summary(glm.3)
summary(glm.2)
glm.2<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,5)), data = post.2001,na.action=na.omit)
summary(glm.2)
glm.2.table <- xtable(summary(glm.2),caption="Determinants of Media Coverage, 1980–2001")
print(glm.2.table)
summary(glm.2)
glm.2.table <- xtable(summary(glm.2),caption="Determinants of Media Coverage, 1980–2001")
print(glm.2.table)
glm.2.table <- xtable(summary(glm.2),caption="Determinants of Media Coverage, 1980–2001", align="c")
glm.2.table <- xtable(summary(glm.2),caption="Determinants of Media Coverage, 1980–2001", align="ccccc")
print(glm.2.table)
summary(glm.2)
glm.1<-glm(nyt ~ nyt.lagged+polity+amnesty.uas+gdp.pc.wdi+pop.wdi+cinc+domestic9+physint+speech+(relevel(region,4)), data = pre.2001, na.action=na.omit)
summary(glm.1)
glm.1.table <- xtable(summary(glm.1),caption="Determinants of Media Coverage, 1980–2001", align="ccccc")
print(glm.1.table)
summary(glm.1)
summary(glm.2)
summary(glm.1)
summary(glm.1)
?print
total <- read.csv("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Data/New\ York\ Times/NYT.csv")
total.all <- total # retain all data
total.without.us <- subset(total,!grepl("united states",total$COUNTRY_FINAL,ignore.case=TRUE)) # without USA
total.violations <- subset(total,grepl("HUMAN RIGHTS VIOLATIONS",total$SUBJECT)) # only human rights violations
total.violations.no.us <- subset(total.without.us,grepl("HUMAN RIGHTS VIOLATIONS",total.without.us$SUBJECT)) # without USA, and only human rights violations
total <- total.violations
# define function
country.counts <- function(x){
subset.data <- subset(total,COUNTRY_FINAL==x)
return(nrow(subset.data))
}
country.sum <- as.character(unique(total$COUNTRY_FINAL))
country.sum.count <- lapply(country.sum,country.counts)
country.sum <- data.frame(cbind(country.sum,country.sum.count))
country.sum$country.sum <- as.character(country.sum$country.sum)
write.csv(country.sum,"country.sums.csv")
#################################################################
region.per.year <- function(x,y){
subset.data <- subset(total,REGION==x & YEAR==y)
return(as.integer(nrow(subset.data)))
}
regions <- unique(total$REGION[!is.na(total$REGION)])
number.news <- data.frame(regions)
start <- min(total$YEAR, na.rm=TRUE)
end <- max(total$YEAR, na.rm=TRUE)
for(i in seq(start,end)){
number.news <- cbind(number.news,unlist(lapply(regions,region.per.year,y=i)))
}
names(number.news) <- c("regions",start:end)
write.csv(number.news,"region_year_counts.csv")
rownames(number.news) <- number.news$regions
number.news$regions
number.news <- number.news[, !(colnames(number.news) %in% c("regions"))]
x <- seq(1980,2010)
m <- number.news[3,]
l <- number.news[1,]
c <- number.news[5,]
a <- number.news[4,]
w <- number.news[2,]
f <- number.news[6,]
plot(x,m,
xlab="year",
ylab="number of articles in NYT", # Change this for your data
main="Human Rights Violations Articles Over Time",
type="l",
col="red"
)
lines(x, l, type="l",col="green" )
lines(x, c, type="l",col="yellow" )
lines(x, a, type="l",col="blue" )
lines(x, w, type="l",col="orange" )
lines(x, f, type="l",col="purple" )
?export
??jpeg
setwd("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Results")
jpeg(filename = "Rplot%03d.jpeg",
width = 480, height = 480, units = "px", pointsize = 12,
quality = 75,
bg = "white", res = NA, ...,
type = c("cairo", "Xlib", "quartz"), antialias)
jpeg(filename = "Rplot%03d.jpeg",
width = 480, height = 480, units = "px", pointsize = 12,
quality = 75,
bg = "white", res = NA,
type = c("cairo", "Xlib", "quartz"), antialias)
jpeg(filename = "Rplot%03d.jpeg",
width = 480, height = 480, units = "px", pointsize = 12,
quality = 75)
setwd("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Results")
jpeg(filename = "Rplot%03d.jpeg",
width = 480, height = 480, units = "px", pointsize = 12,
quality = 75)
write.csv(number.news,"region_year_counts.csv")
legend("topleft", c("Middle East", "Latin America", "Former Soviet Union","Asia","West","Africa"), col = c("red", "green","yellow","blue","orange","purple"),
text.col = "black", lty = 1,
merge = TRUE, bg = "gray90")
View(post.2001)
setwd("/Users/rterman/Dropbox/berkeley/Dissertation/Data\ and\ Analyais/Git\ Repos/human-rights-coverage/Results/distinctive\ words/nopn")
africa <- read.csv("africa.csv")
View(africa)
names(africa)
names(africa) <- c("word","count")
